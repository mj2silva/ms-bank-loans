package com.ms.loans.dto;

import com.ms.restUtilities.dto.ValidationGroups;
import jakarta.validation.constraints.*;
import lombok.Getter;
import lombok.Setter;

import java.math.BigDecimal;

@Getter
@Setter
public class LoanDto {
    @Null(groups = { ValidationGroups.UpdateGroup.class, ValidationGroups.CreationGroup.class }, message = "Id for loan is generated by the api")
    @NotNull(groups = LoanValidationGroups.LoanPaymentGroup.class, message = "Loan id for payment should be sent")
    @Positive(groups = LoanValidationGroups.LoanPaymentGroup.class, message = "Loan id for payment is not valid")
    private Long loanId;

    @Null(message = "Loan number is generated by the api")
    private String loanNumber;

    @Null(groups = { ValidationGroups.UpdateGroup.class, LoanValidationGroups.LoanPaymentGroup.class }, message = "Customer id cannot be changed")
    @NotNull(groups = ValidationGroups.CreationGroup.class, message = "Customer id is mandatory for loan creation")
    private Long customerId;

    @Null(groups = { ValidationGroups.UpdateGroup.class, LoanValidationGroups.LoanPaymentGroup.class }, message = "Loan type cannot be updated")
    @NotEmpty(groups = ValidationGroups.CreationGroup.class, message = "Account type is required for creating an account")
    private String type;

    @Null(groups = { ValidationGroups.UpdateGroup.class, LoanValidationGroups.LoanPaymentGroup.class }, message = "Loan amount cannot be updated")
    @NotNull(groups = ValidationGroups.CreationGroup.class, message = "Total loan is required for creating a loan")
    private BigDecimal totalLoan;

    @Null(groups = ValidationGroups.UpdateGroup.class, message = "Amount paid is not overrideable")
    @Null(groups = ValidationGroups.CreationGroup.class, message = "Amount paid is not set for loan creation")
    @NotNull(groups = LoanValidationGroups.LoanPaymentGroup.class, message = "Loan amount paid should be sent")
    @Min(groups = LoanValidationGroups.LoanPaymentGroup.class, message = "Min payment is set to 1 USD", value = 1)
    private BigDecimal amountPaid;

    @Null(message = "Outstanding amount is not overrideable")
    private BigDecimal outstandingAmount;
}
